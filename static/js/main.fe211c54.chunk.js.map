{"version":3,"sources":["components/UI/button/button.module.css","components/UI/input/index.jsx","components/UI/button/index.jsx","components/contactForm/index.jsx","App.js","index.js","components/contactForm/contactForm.module.css","components/UI/input/input.module.css"],"names":["module","exports","Input","type","id","value","className","placeHolder","name","onChange","restProps","classList","style","input","join","placeholder","pattern","title","required","Button","children","onClick","button","ContactForm","state","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","contactForm","this","htmlFor","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,OAAS,yB,8NCyCZC,EAtCD,SAAC,GASR,IAAD,IARJC,YAQI,MARG,OAQH,EAPJC,EAOI,EAPJA,GACAC,EAMI,EANJA,MACAC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACGC,EACC,iFACEC,EAAY,CAACC,IAAMC,MAAOP,GAAWQ,KAAK,KAEhD,OACE,iDACMJ,GADN,IAEEN,GAAIA,EACJD,KAAMA,EACNE,MAAOA,EACPG,KAAMA,EACNF,UAAWK,EACXI,YAAaR,EACbE,SAAUA,EACVO,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,M,iBCPCC,EAnBA,SAAC,GAKT,IAJLb,EAII,EAJJA,UACAc,EAGI,EAHJA,SACAjB,EAEI,EAFJA,KACAkB,EACI,EADJA,QAEMV,EAAY,CAACC,IAAMU,OAAQhB,GAAWQ,KAAK,KAEjD,OACE,wBACER,UAAWK,EACXR,KAAMA,EACNkB,QAASA,EAHX,SAKGD,KC2BQG,E,4MArCbC,MAAQ,CACNhB,KAAM,I,EAIRiB,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBnB,EAAR,EAAQA,KAAMH,EAAd,EAAcA,MACd,EAAKuB,UAAS,iCAAUpB,EAAOH,O,EAGjCwB,aAAe,SAAAH,GACbA,EAAMI,iBACN,EAAKC,MAAMC,SAAS,EAAKR,OAIzB,EAAKS,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEpB,KAAM,M,4CAGxB,WAEE,OACE,uBAAMF,UAAWM,IAAMsB,YAAaF,SAAUG,KAAKN,aAAnD,UACE,uBAAOO,QAAQ,OAAf,kBACA,cAAC,EAAD,CAAO5B,KAAK,OAAOH,MAAO8B,KAAKX,MAAMhB,KAAMC,SAAU0B,KAAKV,eAC1D,cAAC,EAAD,CAAQtB,KAAK,SAAb,gC,GA9BkBkC,aCSXC,MAVf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B3C,EAAOC,QAAU,CAAC,YAAc,mC,kBCAhCD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,yB","file":"static/js/main.fe211c54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2y5Yz\"};","\r\nimport style from './input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({\r\n  type = 'text',\r\n  id,\r\n  value,\r\n  className,\r\n  placeHolder,\r\n  name,\r\n  onChange,\r\n  ...restProps\r\n}) => {\r\n  const classList = [style.input, className].join(' ');\r\n\r\n  return (\r\n    <input\r\n      {...restProps}\r\n      id={id}\r\n      type={type}\r\n      value={value}\r\n      name={name}\r\n      className={classList}\r\n      placeholder={placeHolder}\r\n      onChange={onChange}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeHolder: PropTypes.string,\r\n  onInput: PropTypes.func,\r\n};\r\n\r\nexport default Input;","import style from './button.module.css';\r\n\r\nconst Button = ({\r\n  className,\r\n  children,\r\n  type,\r\n  onClick,\r\n}) => {\r\n  const classList = [style.button, className].join(' ');\r\n\r\n  return (\r\n    <button\r\n      className={classList}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import { Component } from \"react\"\r\nimport style from './contactForm.module.css'\r\nimport Input from '../UI/input'\r\nimport Button from '../UI/button'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    // number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState(() => ({ [name]: value }));\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    // const { onSubmit } = this.props;\r\n    // onSubmit && onSubmit({ ...this.state })\r\n    // console.log(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: ''/* , number: '' */ });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"Name\">Name</label>\r\n        <Input name=\"Name\" value={this.state.name} onChange={this.handleChange} />\r\n        <Button type=\"submit\">Add contact</Button>\r\n\r\n      </form>\r\n    );\r\n\r\n  };\r\n\r\n}\r\nexport default ContactForm;","import './App.css';\nimport ContactForm from './components/contactForm'\n// import ContactList from './components/contactList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactForm></ContactForm>\n      {/* <ContactList></ContactList> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2kf9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__1vInn\",\"button\":\"input_button__2PVNM\"};"],"sourceRoot":""}